!function e(n,t,o){function a(r,l){if(!t[r]){if(!n[r]){var c="function"==typeof require&&require;if(!l&&c)return c(r,!0);if(i)return i(r,!0);var s=new Error("Cannot find module '"+r+"'");throw s.code="MODULE_NOT_FOUND",s}var u=t[r]={exports:{}};n[r][0].call(u.exports,function(e){var t=n[r][1][e];return a(t?t:e)},u,u.exports,e,n,t,o)}return t[r].exports}for(var i="function"==typeof require&&require,r=0;r<o.length;r++)a(o[r]);return a}({1:[function(e,n,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),window.ASSETS={};var o=function(e,n){return function(t){var o=new THREE.TextureLoader;o.load(e,function(e){ASSETS[n]=e,t()})}};t.assetsInit=function(e){function n(){t++,t>=a.length&&e()}var t=0,a=[];a.push(o("imgs/matcap4.jpg","matcap1")),a.forEach(function(e){e(n)})}},{}],2:[function(e,n,t){"use strict";function o(){function e(){n=$(window).width()*(o?1:1.2),t=$(window).height(),r&&(r.setSize(n,t),r.setViewport(0,0,n,t),c.aspect=n/t,c.updateProjectionMatrix())}var n,t,o=!1;navigator.userAgent.match(/iPad/i)?o=!0:navigator.userAgent.match(/Android|webOS|iPhone|iPod|Blackberry/i)&&(o=!0),n=$(window).width()*(o?1:1.2),t=$(window).height();var i=Math.min(1.5,window.devicePixelRatio),r=new THREE.WebGLRenderer({canvas:document.getElementById("canvas"),antialias:!0});r.setClearColor(0,1),r.setSize(n,t),r.setPixelRatio(i);var l=new THREE.Scene,c=new THREE.PerspectiveCamera(45,n/t,1e-4,1e3);c.position.set(0,1,-3),c.lookAt(new THREE.Vector3);var s=new a(c);return window.addEventListener("resize",e),{renderer:r,scene:l,controls:s,camera:c}}var a=e("three-orbit-controls")(THREE);n.exports=o},{"three-orbit-controls":7}],3:[function(e,n,t){"use strict";function o(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(t,"__esModule",{value:!0});var a=function(){function e(e,n){for(var t=0;t<n.length;t++){var o=n[t];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}return function(n,t,o){return t&&e(n.prototype,t),o&&e(n,o),n}}(),i=function(){function e(){o(this,e)}return a(e,[{key:"multiLoad",value:function(e,n){function t(){o++,o>=e.length&&n()}for(var o=0,a=0;a<e.length;a++)e[a](t)}},{key:"scriptLoad",value:function(e,n){var t=document.createElement("script");t.type="text/javascript",t.src=e;var o=document.getElementsByTagName("script")[0];o.parentNode.insertBefore(t,o),t.onload=n}}]),e}();t.LoadingUtil=i},{}],4:[function(e,n,t){"use strict";function o(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(t,"__esModule",{value:!0}),t.SoundCloud=void 0;var a,i,r,l,c,s=function(){function e(e,n){for(var t=0;t<n.length;t++){var o=n[t];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}return function(n,t,o){return t&&e(n.prototype,t),o&&e(n,o),n}}(),u=e("./LoadingUtil"),m=new u.LoadingUtil,d="1a2814361cbcccc8033ad0ab9ec86c06",v={},f=!1,p=!1,x=function(){function e(){o(this,e)}return s(e,[{key:"init",value:function(e,n){function t(){console.log("SoundCloudController::scriptLoadComp");var t=document.createElement("canvas");t.id="SoundCloudController_debug",SC.initialize({client_id:d}),SC.get("/resolve",{url:e},function(e){if(!e||!e.errors){l.innerHTML+="<a href='"+e.permalink_url+"' target='_blank' >"+e.title+"</a><canvas id='SoundCloudController_equalizer'></canvas>",l.className="__SC__menu",a=document.createElement("audio"),a.crossOrigin="anonymous",a.src=e.stream_url+"?client_id="+d;var o=new(window.AudioContext||window.webkitAudioContext);r=o.createAnalyser(),r.fftSize=2048;var c=o.createMediaElementSource(a);c.connect(r),r.connect(o.destination),i=new Uint8Array(r.frequencyBinCount),p=!0,n(l,t)}})}l=document.createElement("div"),m.multiLoad([function(e){m.scriptLoad("//connect.soundcloud.com/sdk.js",e)},function(e){m.scriptLoad("//cdnjs.cloudflare.com/ajax/libs/processing.js/1.4.8/processing.min.js",e)}],t)}},{key:"debugShow",value:function(){function e(e,n){var t=e.getBoundingClientRect(),o=e.width/t.width,a=e.height/t.height;return{x:(n.clientX-t.left)*o,y:(n.clientY-t.top)*a}}var n=document.getElementById("SoundCloudController_debug");n.style.zIndex=9999,n.style.position="absolute",n.style.top="0px",n.style.left="0px";var t=n.getContext("2d"),o=new Processing(n),a=1024,l=300;o.setup=function(){o.frameRate(32),o.noLoop(),o.background(0),o.size(a,500)};var c=r.frequencyBinCount,s=(Math.round(l/512),Math.round(a/c)),u=0;o.draw=function(){r.getByteFrequencyData(i),o.background(0),o.stroke(255),o.fill(255);for(var e=0;e<.1*c;e++)u=i[e]+Math.abs(i[e]/h(44100/2048*e)),u-=160,o.rect(e*s*10,500,10*(s-2),u*-1),m&&(t.fillStyle="red",t.font="italic 400 24px Unknown Font, sans-serif",t.fillText(parseInt(.1*m.x),10*parseInt(.1*m.x),m.y-30),t.fillStyle="white")},o.setup(),o.loop();var m;n.onmousemove=function(t){m=e(n,t)}}},{key:"getControllerElement",value:function(){return l}},{key:"play",value:function(){function e(){if(setTimeout(e,66),a.volume<.99?a.volume+=.005:a.volume=1,t.clearRect(0,0,25,12),t.beginPath(),f){t.fillStyle="#ffffff";for(var n=0,o=0;o<5;o++)n=4+.01*i[10*o]+Math.random()*(o+2)*4,t.rect(5*o,16-n,4,n)}else{t.fillStyle="#777777";for(var n=0,o=0;o<5;o++)n=10-o,t.rect(5*o,16-n,4,n)}t.fill()}var n=this;if(a.play(),f=!0,!c){c=document.getElementById("SoundCloudController_equalizer");var t=c.getContext("2d");c.width=25,c.height=12,c.onclick=function(){n.togglePlayPause()},a.loop=!0,a.volume=0,e()}}},{key:"togglePlayPause",value:function(){f?this.pause():this.play()}},{key:"pause",value:function(){f=!1,a.pause()}},{key:"stop",value:function(){a.pause(),a.currentTime=0}},{key:"update",value:function(){if(p){r.getByteFrequencyData(i);var e,n=r.frequencyBinCount;for(var t in v)v[t].gain=0;for(var o=0;o<.1*n;o++){e=i[o]+Math.abs(i[o]/h(44100/2048*o));for(var t in v)o==v[t].freq-1&&(v[t].gain+=e/3),o==v[t].freq+0&&(v[t].gain+=e/3),o==v[t].freq+1&&(v[t].gain+=e/3,v[t].gain<=130&&(v[t].gain=0))}}}},{key:"getBytes",value:function(){return i?i:[]}},{key:"getIsPlay",value:function(){return f}},{key:"setPoint",value:function(e,n){v[e]={freq:n,gain:0}}},{key:"removePoint",value:function(e){delete v[e]}},{key:"getGain",value:function(e){return v.hasOwnProperty(e)?v[e].gain:0}}]),e}(),h=function(e){var n=e*e,t=n*n,o=10*Math.log10(1.562339*t/((n+11589.09305)*(n+544440.6705)));return o+=10*Math.log10(2.242881*Math.pow(10,16)*t/(Math.pow(n+424.3186774,2)*Math.pow(n+148699001.4,2)))};t.SoundCloud=x},{"./LoadingUtil":3}],5:[function(e,n,t){"use strict";function o(){a(),i()}function a(){V=new GPUComputationRenderer(W,W,g);var e=V.createTexture(),n=V.createTexture(),t=V.createTexture();r(e,n,t),F=V.addVariable("textureVelocity",L,n),_=V.addVariable("texturePosition",R,e),j=V.addVariable("textureAcceleration",A,t),V.setVariableDependencies(F,[_,F,j]),V.setVariableDependencies(_,[_,F,j]),V.setVariableDependencies(j,[_,F,j]),N=_.material.uniforms,B=F.material.uniforms,U=j.material.uniforms,_.material.uniforms.time={value:0},F.material.uniforms.time={value:0},j.material.uniforms.time={value:0},_.material.uniforms.texture1={type:"t",value:null},F.material.uniforms.texture1={type:"t",value:null},F.material.uniforms.amount={type:"f",value:null},j.material.uniforms.texture1={type:"t",value:null},j.material.uniforms.texture2={type:"t",value:null},V.init()}function i(){for(var e,n,t=new THREE.BufferGeometry,o=new Float32Array(3*Z),a=.005,i=.005,r=.005,s=[0,-1,-1,0,1,0,.866025,-1,.5,.866025,-1,.5,0,1,0,-.866025,-1,.5,-.866025,-1,.5,0,1,0,0,-1,-1,0,-1,-1,.866025,-1,.5,-.866025,-1,.5],m=0;m<3*Z;m+=36){e=1+1*Math.random(),n=1+1*Math.random();for(var d=0;d<108;d+=3)o[m+d+0]=s[d+0]*a*e,o[m+d+1]=s[d+1]*i*e,o[m+d+2]=s[d+2]*r*n}for(var v=new Float32Array(2*Z),f=0,p=0;p<W;p++)for(var m=0;m<W;m++)v[f++]=m/(W-1),v[f++]=p/(W-1);for(var g=new Float32Array(Z),m=0;m<Z;m++)g[m]=m;t.addAttribute("position",new THREE.BufferAttribute(o,3)),t.addAttribute("uv",new THREE.BufferAttribute(v,2)),t.addAttribute("index2",new THREE.BufferAttribute(g,1)),t.computeVertexNormals(),Y={texture1:{type:"t",value:null},textureMat:{type:"t",value:ASSETS.matcap1},texturePosition:{value:null},textureVelocity:{value:null},textureAcceleration:{value:null},amount:{type:"f",value:0},cameraConstant:{value:l(x)},invMatrix:{value:new THREE.Matrix4}};var y=new THREE.ShaderMaterial({uniforms:Y,vertexShader:M,fragmentShader:T,side:THREE.DoubleSide,vertexColors:THREE.VertexColors,transparent:!0});y.extensions.derivatives=!0,y.extensions.drawBuffers=!0;var w=new THREE.Mesh(t,y);w.matrixAutoUpdate=!1,w.updateMatrix(),h.add(w);var b=new THREE.Matrix4;b.copy(w.matrixWorld),b.multiply(x.matrixWorldInverse);var m=(new THREE.Matrix4).getInverse(b);y.uniforms.invMatrix.value=m;for(var R=9036,L=new THREE.BufferGeometry,A=new Float32Array(3*R),a=.04,s=[0,-1,-1,0,1,0,.866025,-1,.5,.866025,-1,.5,0,1,0,-.866025,-1,.5,-.866025,-1,.5,0,1,0,0,-1,-1,0,-1,-1,.866025,-1,.5,-.866025,-1,.5],m=0;m<3*R;m+=36)for(var d=0;d<108;d+=3)A[m+d+0]=s[d+0]*a,A[m+d+1]=s[d+1]*a,A[m+d+2]=s[d+2]*a;for(var D=new Float32Array(2*R),f=0,p=0;p<W;p++)for(var m=0;m<W;m++)D[f++]=m/(W-1),D[f++]=p/(W-1);for(var V=new Float32Array(3*R),m=0;m<3*R;m+=3)V[m+0]=2*Math.random()-1,V[m+1]=2*Math.random()-1,V[m+2]=2*Math.random()-1;for(var F=new Float32Array(R),m=0;m<R;m++)F[m]=m;L.addAttribute("position",new THREE.BufferAttribute(A,3)),L.addAttribute("uv",new THREE.BufferAttribute(D,2)),L.addAttribute("bodyRotation",new THREE.BufferAttribute(V,3)),L.addAttribute("bodyIndex",new THREE.BufferAttribute(F,1));var _="./imgs/",j=[_+"pz.png",_+"pz.png",_+"pz.png",_+"pz.png",_+"pz.png",_+"pz.png"],N=THREE.ImageUtils.loadTextureCube(j);G={texture1:{type:"t",value:null},soundCloudTexture:{type:"t",value:null},soundCloudHigh:{type:"f",value:0},soundCloudLow:{type:"f",value:0},envMap:{type:"t",value:N},texturePosition:{value:null},textureVelocity:{value:null},textureAcceleration:{value:null},cameraConstant:{value:l(x)},invMatrix:{value:new THREE.Matrix4}};var B=new THREE.ShaderMaterial({uniforms:G,vertexShader:z,fragmentShader:C,side:THREE.DoubleSide,vertexColors:THREE.VertexColors,transparent:!0});B.extensions.derivatives=!0,B.extensions.drawBuffers=!0;var U=new THREE.Mesh(L,B);U.matrixAutoUpdate=!1,U.updateMatrix(),h.add(U);var b=new THREE.Matrix4;b.copy(U.matrixWorld),b.multiply(x.matrixWorldInverse);var m=(new THREE.Matrix4).getInverse(b);B.uniforms.invMatrix.value=m;var q=function e(n){var e=0;return n.forEach(function(n){e+=n}),e},X=0,K=[],J=document.getElementById("loadingNum"),ee=function(e){if(e.lengthComputable){var n=e.loaded/e.total*100;K[X]=n,100==Math.round(n,2)&&X++,console.log(1*q(K)/8);var t=parseInt(1*q(K)/8);t>=100&&(t=100),J.innerHTML="Loading "+t+" %"}},ne=function(e){},te="models/mmd/model.pmx";I=new THREE.MMDHelper;var oe=new THREE.MMDLoader;oe.loadModel(te,function(e){for(var n=new Float32Array(e.geometry.attributes.position.count),t=0;t<e.geometry.attributes.position.count;t++)n[t]=t;e.geometry.addAttribute("index2",new THREE.BufferAttribute(n,1));for(var o=[],t=0,a=e.material.materials.length;t<a;t++){var i=new THREE.ShaderMaterial({vertexShader:P,fragmentShader:E,skinning:!0,wireframe:!0});o.push(i)}var r=new THREE.MultiMaterial(o);e.material=r,window.mmdMesh=e,H=e,H.scale.set(.4,.4,.4),H.position.x=-1.4,Q.add(H),I.add(H);var l=[{name:"dance1",file:"models/mmd/vmds/dance.vmd"},{name:"dance2",file:"models/mmd/vmds/dance2.vmd"},{name:"dance3",file:"models/mmd/vmds/northern_soul_spin_combo.vmd"},{name:"dance4",file:"models/mmd/vmds/northern_soul_floor_combo.vmd"},{name:"dance5",file:"models/mmd/vmds/mma_kick.vmd"},{name:"dance6",file:"models/mmd/vmds/breakdance_freezes.vmd"},{name:"dance7",file:"models/mmd/vmds/breakdance_footwork_1.vmd"}],s=0,m=function n(){var t=l[s].file;oe.loadVmd(t,function(t){if(oe.createAnimation(e,t,l[s].name),s++,s<l.length)n();else{var o=function(e){if(m&&(m=!1,$(".op").addClass("hide"),$(".info").addClass("show")),TweenMax.killTweensOf(d),TweenMax.to(d,0,{scale:1.5}),TweenMax.to(d,.3,{scale:1}),e.which)switch(e.which){case 115:c("dance2");break;case 100:c("dance3");break;case 102:c("dance4");break;case 103:c("dance5");break;case 104:c("dance6");break;case 106:c("dance7");break;default:c("dance"+parseInt(6*Math.random()+2))}else c("dance"+parseInt(6*Math.random()+2))};I.setAnimation(H),H.mixer.stopAllAction(),window.soundCloud&&window.soundCloud.play(),S={};for(var a=0;a<H.geometry.animations.length;++a){var i=H.geometry.animations[a],r=H.mixer.clipAction(i);S[H.geometry.animations[a].name]=r,r.repetitions="Infinity"}window.motionObj=S,k.push(S.dance1),S.dance1.play(),O.push(S.dance2),O.push(S.dance3),O.push(S.dance4),O.push(S.dance5),O.push(S.dance6),O.push(S.dance7),window.mmdMesh.mixer.timeScale=1.14814814815;var m=!0,d=document.getElementById("typeAnyKey");$(document).bind("touchstart",o),$(document).keypress(o);var v=document.getElementById("wp-loading"),f=$(window).height()/2;TweenMax.to(v,.5,{delay:.5,height:0,y:f,ease:Expo.easeInOut}),u()}},ee,ne)};m()},ee,ne)}function r(e,n,t){for(var o=e.image.data,a=n.image.data,i=t.image.data,r=0,l=0,c=o.length;l<c;l+=144){r++;for(var s=r,u=0;u<144;u+=4)o[l+u+0]=0,o[l+u+1]=0,o[l+u+2]=0,o[l+u+3]=s;s=Math.random();for(var u=0;u<144;u+=4)a[l+u+0]=0,a[l+u+1]=0,a[l+u+2]=0,a[l+u+3]=s;for(var m=0,d=0,v=0,u=0;u<144;u+=4)i[l+u+0]=m,i[l+u+1]=d,i[l+u+2]=v,i[l+u+3]=0}}function l(e){return window.innerHeight/(Math.tan(.5*THREE.Math.DEG2RAD*e.fov)/e.zoom)}function c(e){D=!1,window.stopList=window.stopList.concat(window.playList.splice(0,window.playList.length)),window.stopList.forEach(function(n,t){n._clip.name==e&&(window.playList=window.stopList.splice(t,1),window.playList[0].time=0,window.playList[0].play())})}function s(){window.stopList=window.stopList.concat(window.playList.splice(0,window.playList.length)),window.stopList.forEach(function(e,n){"dance1"==e._clip.name&&(window.playList=window.stopList.splice(n,1),window.playList[0].play())})}function u(){requestAnimationFrame(u),b.update(),oe+=.003,oe>6.28&&(oe-=6.28),ae+=.01,ae>6.28&&(ae-=6.28),x.position.x=2*Math.cos(oe),x.position.y=1+.5*Math.cos(ae),x.position.z=2*Math.sin(oe)+.5*Math.sin(ae),window.mmdMesh&&(te.x+=(0*mmdMesh.skeleton.bones[0].position.x-te.x)/10,te.y+=(0*mmdMesh.skeleton.bones[0].position.y-te.y)/10,te.z+=(.01*mmdMesh.skeleton.bones[0].position.z-te.z)/10),ne.set(te.x,.4+te.y,te.z),x.lookAt(ne),S&&(window.playList.forEach(function(e){e.weight+=(1-e.weight)/10,e.weight>.9999&&(e.weight=1),e._clip.duration-.1<e.time&&0==D&&(D=!0,s())}),window.stopList.forEach(function(e){e.weight+=(0-e.weight)/10,e.weight<1e-4&&(e.weight=0)})),m()}function m(){I.animate(q.getDelta()),g.render(Q,x,J),K&&(K.texture1.value=J.texture),V.compute(),F.material.uniforms.time.value+=1/60,_.material.uniforms.time.value+=1/60,j.material.uniforms.time.value+=1/60,S&&(Y.amount.value=1-S.dance1.weight,F.material.uniforms.amount.value=1-S.dance1.weight),F.material.uniforms.texture1.value=J.texture,_.material.uniforms.texture1.value=J.texture,j.material.uniforms.texture1.value=J.texture,j.material.uniforms.texture2.value=ee.texture,Y.texture1.value=J.texture,G.texture1.value=J.texture,w&&(w.image.data=b.getBytes(),w.needsUpdate=!0,G.soundCloudTexture.value=w,G.soundCloudHigh.value=1,G.soundCloudLow.value=.5+1e-8*Math.pow(b.getGain("low"),3)),Y.texturePosition.value=V.getCurrentRenderTarget(_).texture,Y.textureVelocity.value=V.getCurrentRenderTarget(F).texture,Y.textureAcceleration.value=V.getCurrentRenderTarget(j).texture,G.texturePosition.value=V.getCurrentRenderTarget(_).texture,G.textureVelocity.value=V.getCurrentRenderTarget(F).texture,G.textureAcceleration.value=V.getCurrentRenderTarget(j).texture,g.render(h,x),g.render(Q,x,ee)}var d=e("./lib/AssetsController"),v=e("./lib/SoundCloud.js"),f=e("./lib/CreateThree"),p=f(),x=p.camera,h=p.scene,g=p.renderer,y=(p.controls,e("glslify")),w=void 0,b=new v.SoundCloud;b.init("https://soundcloud.com/gradesofficial/king-chris-lake-remix",function(e,n){document.getElementById("footer").appendChild(e),w=new THREE.DataTexture(b.getBytes(),8,8,THREE.RGBFormat),w.needsUpdate=!0,window.soundCloudTexture=w,b.setPoint("low",32),b.setPoint("high",13),b.getIsPlay()||b.play(),window.soundCloud=b});var E=y(["#define GLSLIFY 1\nvarying vec3 vColor;\n\nvoid main() {\n  gl_FragColor = vec4(vColor,1.0);\n}"]),P=y(["#define GLSLIFY 1\n/**\n * Multiply each vertex by the\n * model-view matrix and the\n * projection matrix (both provided\n * by Three.js) to get a final\n * vertex position\n */\n//   varying vec2 vUv;\n//    uniform mat4 bindMatrix;\n//    uniform mat4 bindMatrixInverse;\n//    uniform mat4 boneMatrices[ MAX_BONES ];\nuniform float offset;\n\n#define PI 3.14159265359\n#define PI2 6.28318530718\n#define PI_HALF 1.5707963267949\n#define RECIPROCAL_PI 0.31830988618\n#define RECIPROCAL_PI2 0.15915494\n#define LOG2 1.442695\n#define EPSILON 1e-6\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\n\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\n\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract(sin(sn) * c);\n}\n\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\n\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\n\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n};\n\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\n\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\n\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\n\treturn - distance * planeNormal + point;\n}\n\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\n}\n\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n}\n\nmat3 transpose( const in mat3 v ) {\n\tmat3 tmp;\n\ttmp[0] = vec3(v[0].x, v[1].x, v[2].x);\n\ttmp[1] = vec3(v[0].y, v[1].y, v[2].y);\n\ttmp[2] = vec3(v[0].z, v[1].z, v[2].z);\n\treturn tmp;\n}\n\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\n\t#ifdef BONE_TEXTURE\n\t\tuniform sampler2D boneTexture;\n\t\tuniform int boneTextureWidth;\n\t\tuniform int boneTextureHeight;\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureWidth ) );\n\t\t\tfloat y = floor( j / float( boneTextureWidth ) );\n\t\t\tfloat dx = 1.0 / float( boneTextureWidth );\n\t\t\tfloat dy = 1.0 / float( boneTextureHeight );\n\t\t\ty = dy * ( y + 0.5 );\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\t\treturn bone;\n\t\t}\n\t#else\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\t\t}\n\t#endif\n\n//varying vec4 vPosition;\nvarying vec3 vColor;\nattribute float index2;\n\nconst float frag = 1.0 / 128.;\nconst float texShift = 0.5 * frag;\n\nvoid main() {\n\n  vec3 transformed = vec3(position + normal * offset);\n\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\tskinned  = bindMatrixInverse * skinned;\n\n\tvec4 mvPosition = modelViewMatrix * skinned;\n\n  vec4 pos1 = modelMatrix * skinned * 0.1;\n  vColor = (1.0 + pos1.xyz) * 0.5;\n\n  float pu = fract(index2 * frag) * 2.0 - 1.0;\n  float pv = floor(index2 * frag) * frag * 2.0 - 1.0;\n  gl_Position = vec4(pu + texShift, pv + texShift, 0.0, 1.0);\n  gl_PointSize = 1.0;\n\n }"]),T=(y(["#define GLSLIFY 1\nuniform sampler2D texture1;\n\nvoid main() {\n\n    gl_FragColor = vec4( 0.0, 1.0, 0.0,  .2 );\n\n}"]),y(["#define GLSLIFY 1\nuniform sampler2D texture1;\n\nattribute float index2;\nconst float frag = 1.0 / 128.0;\nconst float texShift = 0.5 * frag;\n\nvoid main() {\n\n    float pu = fract(index2 * frag + texShift);\n    float pv = floor(index2 * frag) * frag + texShift;\n    vec3 tPosition = texture2D(texture1, vec2(pu, pv)).rgb * 2.0 - 1.0;\n\n    gl_Position  = projectionMatrix * viewMatrix * vec4(tPosition, 1.0);\n    gl_PointSize = 1.0;\n\n}"]),y(["precision highp float;\n#define GLSLIFY 1\n\n//struct PointLight {\n//  vec3 position;\n//  vec3 color;\n//  float distance;\n//};\n//\n//uniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n//uniform mat4 invMatrix;\nuniform sampler2D textureMat;\n\nvarying mat4 vModelViewMatrix;\nvarying vec4 vPosition;\nvarying vec3 vNormal;\n//varying vec4 vColor;\nvarying float gain;\n\nvoid main() {\n\n//    vec3 dx = dFdx(vPosition.xyz);\n//    vec3 dy = dFdy(vPosition.xyz);\n//    vec3 fnormal = normalize(cross(normalize(dx), normalize(dy)));\n\n//    vec3 lightPos = pointLights[0].position;\n//    vec3 lightDirection = normalize( vPosition.xyz - lightPos );\n\n//    vec3 invLight = normalize(invMatrix * vec4(lightDirection, 0.0)).xyz;\n//    float diffuse  = clamp(dot(fnormal, invLight), 0.8, 1.0);\n\n//    gl_FragColor = vColor * vec4(vec3(diffuse), 1.0);\n\n    vec3 e = normalize( vec3( vModelViewMatrix * vPosition ) );\n    vec3 n = normalize( vNormal );\n    vec3 r = reflect( e, n );\n    float m = 2. * sqrt(\n      pow( r.x, 2. ) +\n      pow( r.y, 2. ) +\n      pow( r.z + 1., 2. )\n    );\n    vec2 vN = r.xy / m + .5;\n    vec3 base = texture2D( textureMat, vN ).rgb * vec3( 2.4,1.82,1.1);\n\n//    gl_FragColor =  vec4(vNormal, 1.0);\n    gl_FragColor =  vec4(base, 1.0);\n\n}\n"])),M=y(["#define GLSLIFY 1\n#include <common>\n\nuniform sampler2D texturePosition;\nuniform sampler2D textureVelocity;\nuniform sampler2D textureAcceleration;\nuniform float cameraConstant;\nuniform float density;\n\nvarying vec4 vPosition;\nvarying vec4 vColor;\n\nuniform float radius;\nuniform float amount;\nvarying mat4 vModelViewMatrix;\nvarying vec3 vNormal;\nvarying float gain;\n\nvoid main() {\n\n    vec4 velTemp = texture2D( textureVelocity, uv );\n    vec4 accTemp = texture2D( textureAcceleration, uv );\n    vec4 posTemp = texture2D( texturePosition, uv );\n\n    // pos is the position of each box\n    vec3 pos = posTemp.xyz;\n\n    // position is box's position. it has 6 faces\n    vec3 newPosition = position * amount;\n\n    newPosition = mat3( modelMatrix ) * newPosition;\n\n    // rotatoin\n    velTemp = posTemp;\n    velTemp.z *= -1.;\n    float xz = length( velTemp.xz );\n    float xyz = 1.;\n    float x = sqrt( 1. - velTemp.y * velTemp.y );\n    float cosry = velTemp.x / xz;\n    float sinry = velTemp.z / xz;\n    float cosrz = x / xyz;\n    float sinrz = velTemp.y / xyz;\n    mat3 maty =  mat3(\n      cosry, 0, -sinry,\n      0    , 1, 0     ,\n      sinry, 0, cosry\n    );\n    mat3 matz =  mat3(\n      cosrz , sinrz, 0,\n      -sinrz, cosrz, 0,\n      0     , 0    , 1\n    );\n\n    newPosition = maty * matz * newPosition;\n\n    newPosition += pos;\n\n    gl_Position = projectionMatrix * modelViewMatrix * vec4( newPosition, 1.0 );\n\n    vModelViewMatrix = modelViewMatrix;\n\n    vPosition = gl_Position;\n    vNormal = normalMatrix * normal;\n\n//    gain = abs(length(velTemp.xyz));\n\n//    float per = accTemp.w * 0.03;\n    //vColor = vec4( 248.0/255.0, 240.0/255.0, 42.0/255.0, 1.0 );\n//    vColor = vec4( gl_Position.zxy, 1.0 ) * (1.0-per) +\n//            //vec4( 247.0/255.0, 240.0/255.0, 92.0/255.0, 1.0 ) * (1.0-per) +\n////                 vec4( 52.0/255.0, 38.0/255.0, 91.0/255.0, 1.0 ) * (per);\n//                vec4( 240.0/255.0, 240.0/255.0, 35.0/255.0, 1.0 ) * (per);\n\n}"]),C=y(["precision highp float;\n#define GLSLIFY 1\n\nuniform mat4 invMatrix;\n\nvarying vec4 vPosition;\n\nuniform samplerCube envMap;\nvarying float vReflectionFactor;\n\nvarying vec4 vWorldPosition;\nvarying mat3 vModelMatrix;\nvarying vec3 vCameraPosition;\n\nvoid main() {\n\n    //vReflect;\n    vReflectionFactor;\n\n    vec3 dx = dFdx(vPosition.xyz);\n    vec3 dy = dFdy(vPosition.xyz);\n    vec3 fnormal = normalize(cross(normalize(dx), normalize(dy)));\n\n    vec3 worldNormal = normalize( vModelMatrix * fnormal );\n    vec3 I = vWorldPosition.xyz - vCameraPosition;\n\n    vec3 vReflect = reflect( I, worldNormal );\n\n    vec4 envColor = textureCube( envMap, vec3( -vReflect.x, vReflect.yz ) );\n    gl_FragColor = vec4(mix(vec3(1.,1.,0.), envColor.xyz, vec3(clamp( vReflectionFactor, 0.0, 0.95 ))), 1.0);\n    gl_FragColor *= vec4(1.3,1.2,1.0,1.0);\n\n}\n"]),z=y(["#define GLSLIFY 1\n#include <common>\n\nuniform sampler2D texturePosition;\nuniform sampler2D textureVelocity;\nuniform sampler2D textureAcceleration;\nuniform float cameraConstant;\nuniform float density;\n\nuniform float soundCloudLow;\nuniform float soundCloudHigh;\n\nvarying vec4 vPosition;\n\nuniform float radius;\n\nuniform sampler2D texture1;\nuniform sampler2D soundCloudTexture;\n\nattribute float bodyIndex;\nattribute vec3 bodyRotation;\n\nconst float frag = 1.0 / 128.0;\nconst float texShift = 0.5 * frag;\n\nvarying float vReflectionFactor;\nvarying vec4 vWorldPosition;\nvarying mat3 vModelMatrix;\nvarying vec3 vCameraPosition;\n\nfloat magSq(vec3 vec) {\n  return (vec.x*vec.x + vec.y*vec.y + vec.z*vec.z);\n}\n\nvec3 limit(vec3 vec, float max) {\n  if (magSq(vec) > max*max) {\n    vec = normalize(vec);\n    vec *= max;\n  }\n  return vec;\n}\n\nfloat rand2(vec2 co){\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nvoid main() {\n\n    vec4 velTemp = texture2D( textureVelocity, uv );\n    vec4 tmpPos = texture2D( texturePosition, uv );\n\n    float index = tmpPos.w*50.0;//rand(tmpPos.xy)*12200.;\n    float pu = fract(index * frag + texShift);\n    float pv = floor(index * frag) * frag + texShift;\n    vec3 tmpDan = texture2D( texture1, vec2(pu, pv)).rgb * 2.0 - 1.0;\n\n    vec3 soundCloud = texture2D( soundCloudTexture, vec2(pu, pv)).rgb*2.0;\n    float power = length(limit(0.5+soundCloud,2.0)) * soundCloudLow;\n\n    // position is box's position. it has 6 faces\n    vec3 newPosition = position;\n//\n    newPosition = mat3( modelMatrix ) * newPosition;\n//\n//    // rotatoin\n    float aa = rand2(tmpPos.ww);\n    velTemp = vec4(aa,aa*-power,aa*power*2.0,0.0);\n    velTemp.z *= -1.;\n    float xz = length( velTemp.xz );\n    float xyz = 1.;\n    float x = sqrt( 1. - velTemp.y * velTemp.y );\n    float cosry = velTemp.x / xz * (1.0+aa);\n    float sinry = velTemp.z / xz;\n    float cosrz = x / xyz;\n    float sinrz = velTemp.y / xyz;\n    mat3 maty =  mat3(\n      cosry, 0, -sinry,\n      0    , 1.0, 0  ,\n      sinry, 0, cosry\n    );\n    mat3 matz =  mat3(\n      cosrz , sinrz, 0,\n      -sinrz, cosrz, 0,\n      0     , 0    , 1.0\n    );\n    mat3 scale =  mat3(\n      power , 0, 0,\n      0, power, 0,\n      0     , 0  , power\n    );\n\n    newPosition = scale * maty * matz  * newPosition;\n\n    power *= 0.01;\n    tmpDan.x += rand(tmpPos.yx)*power - power*.5;\n    tmpDan.y += rand(tmpPos.xz)*power - power*.5;\n    tmpDan.z += rand(tmpPos.xz)*power - power*.5;\n\n    newPosition += tmpDan;\n\n    gl_Position = projectionMatrix * modelViewMatrix * vec4( newPosition, 1.0 );\n\n    vPosition = projectionMatrix * modelViewMatrix * vec4( newPosition, 1.0 );;\n\n    vec4 mvPosition = modelViewMatrix * vec4( vPosition.xyz, 1.0 );\n    vec4 worldPosition = modelMatrix * vec4( vPosition.xyz, 1.0 );\n    vWorldPosition = worldPosition;\n    vModelMatrix = mat3( modelMatrix[0].xyz, modelMatrix[1].xyz, modelMatrix[2].xyz );\n\n    vCameraPosition = cameraPosition;\n\n    vReflectionFactor = 1.0;\n\n}"]),R=y(["#define GLSLIFY 1\nuniform float time;\n\nfloat rand(vec2 co){\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nuniform sampler2D texture1;\n\nconst float frag = 1.0 / 128.0;\nconst float texShift = 0.5 * frag;\n\nvoid main() {\n\n  vec2 uv = gl_FragCoord.xy / resolution.xy;\n\n  vec4 tmpPos = texture2D( texturePosition, uv );\n  vec4 tmpVel = texture2D( textureVelocity, uv );\n  vec4 tmpAcc = texture2D( textureAcceleration, uv );\n\n  float idParticle = uv.y * resolution.x + uv.x;\n\n  // getting skkinned mesh position\n  float index = tmpPos.w;\n  float pu = fract(index * frag + texShift);\n  float pv = floor(index * frag) * frag + texShift;\n  vec3 tmpDan = texture2D( texture1, vec2(pu, pv)).rgb * 2.0 - 1.0;\n\n  vec4 pos = tmpPos;\n  vec3 vel = tmpVel.xyz;\n\n  pos.xyz += vel.xyz;\n\n  (pos.y<=0.001)?(pos = vec4(pos.x, 0. ,pos.z, pos.w )):vec4(0.0);\n  (tmpVel.w>10.)?(pos = vec4(tmpDan.x,tmpDan.y + rand(tmpDan.xy)*0.03,tmpDan.z, pos.w )):vec4(0.0);\n\n  // pos.w is the index of the skkinned\n  gl_FragColor = vec4( pos );\n\n}"]),L=y(["#define GLSLIFY 1\n// For PI declaration:\n#include <common>\n\nuniform float time;\nuniform float amount;\n\nvoid main() {\n\n    vec2 uv = gl_FragCoord.xy / resolution.xy;\n\n    float idParticle = uv.y * resolution.x + uv.x;\n\n    vec4 tmpVel = texture2D( textureVelocity, uv );\n    vec4 tmpPos = texture2D( texturePosition, uv );\n    vec4 tmpAcc = texture2D( textureAcceleration, uv );\n\n    vec3 vel = vec3(tmpVel.xyz);\n\n    tmpPos.y<=0.0?(vel = vec3(vel.x*0.4,abs(vel.y)*0.4,vel.z*0.4)):vec3(0.0);\n    (tmpPos.y<=0.001)?tmpVel.w += 1.0:tmpVel.w = 0.;\n\n    vel += tmpAcc.xyz*(amount==0.?vec3(0.0,1.0,0.0):vec3(1.0,1.0,1.0));\n\n    gl_FragColor = vec4( vel.xyz, tmpVel.w );\n}"]),A=y(["#define GLSLIFY 1\n// For PI declaration:\n#include <common>\n\nuniform float time;\n\nuniform sampler2D texture1;\nuniform sampler2D texture2;\n\nconst float frag = 1.0 / 128.0;\nconst float texShift = 0.5 * frag;\n\nfloat rand1(vec2 co){\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nfloat magSq(vec3 vec) {\n  return (vec.x*vec.x + vec.y*vec.y + vec.z*vec.z);\n}\n\nvec3 limit(vec3 vec, float max) {\n  if (magSq(vec) > max*max) {\n    vec = normalize(vec);\n    vec *= max;\n  }\n  return vec;\n}\n\nvoid main() {\n\n    vec2 uv = gl_FragCoord.xy / resolution.xy;\n\n    float idParticle = uv.y * resolution.x + uv.x;\n\n    vec4 tmpVel = texture2D( textureVelocity,     uv );\n    vec4 tmpPos = texture2D( texturePosition,     uv );\n    vec4 tmpAcc = texture2D( textureAcceleration, uv );\n\n    float index = tmpPos.w;\n    float pu = fract(index * frag + texShift);\n    float pv = floor(index * frag) * frag + texShift;\n    vec3 tmpDan = texture2D( texture1, vec2(pu, pv)).rgb * 2.0 - 1.0;\n    vec3 tmpDan2 = texture2D( texture2, vec2(pu, pv)).rgb * 2.0 - 1.0;\n\n    vec3 acc = tmpAcc.xyz;\n    vec3 dx = limit(tmpDan-tmpDan2,0.06);\n\n    (tmpVel.w>10.)?(acc = (dx )*0.015 + vec3( 0.0000, -0.001-rand1(tmpDan.xz)*0.0005, 0.000)):vec3(0.0);\n    (tmpVel.w>10.)?tmpAcc.w = 0.0:tmpAcc.w += 1.0;\n\n    // acc.w is the time of after particle born\n    gl_FragColor = vec4( acc.xyz, tmpAcc.w );\n\n}"]);
window.scene=h,window.THREE=THREE;var S,D=!0,k=[],O=[];window.playList=k,window.stopList=O;var H,I,V,F,_,j,N,B,U,Y,G,q=new THREE.Clock,W=720,Z=W*W,X=new THREE.PolarGridHelper(1,1);h.add(X);var K,Q=new THREE.Scene,J=new THREE.WebGLRenderTarget(128,128,{minFilter:THREE.LinearFilter,magFilter:THREE.NearestFilter}),ee=new THREE.WebGLRenderTarget(128,128,{minFilter:THREE.LinearFilter,magFilter:THREE.NearestFilter}),ne=new THREE.Vector3(0,.3,0),te=new THREE.Vector3(0,.3,0),oe=3.2,ae=0;(0,d.assetsInit)(function(){o()}),window.playAnimation=c;var ie=function(e,n){for(var t,o,a=0;a<H.geometry.animations.length;++a)H.geometry.animations[a].name===e&&(t=H.geometry.animations[a],o=H.mixer.clipAction(t));n?o.repetitions="Infinity":o.repetitions=0,o.play()};window.changeAnimation=ie,window.animationState="dance1"},{"./lib/AssetsController":1,"./lib/CreateThree":2,"./lib/SoundCloud.js":4,glslify:6}],6:[function(e,n,t){n.exports=function(e){"string"==typeof e&&(e=[e]);for(var n=[].slice.call(arguments,1),t=[],o=0;o<e.length-1;o++)t.push(e[o],n[o]||"");return t.push(e[o]),t.join("")}},{}],7:[function(e,n,t){n.exports=function(e){function n(n,t){function o(){return 2*Math.PI/60/60*O.autoRotateSpeed}function a(){return Math.pow(.95,O.zoomSpeed)}function i(e){B.theta-=e}function r(e){B.phi-=e}function l(n){O.object instanceof e.PerspectiveCamera?U/=n:O.object instanceof e.OrthographicCamera?(O.object.zoom=Math.max(O.minZoom,Math.min(O.maxZoom,O.object.zoom*n)),O.object.updateProjectionMatrix(),G=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),O.enableZoom=!1)}function c(n){O.object instanceof e.PerspectiveCamera?U*=n:O.object instanceof e.OrthographicCamera?(O.object.zoom=Math.max(O.minZoom,Math.min(O.maxZoom,O.object.zoom/n)),O.object.updateProjectionMatrix(),G=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),O.enableZoom=!1)}function s(e){q.set(e.clientX,e.clientY)}function u(e){Q.set(e.clientX,e.clientY)}function m(e){X.set(e.clientX,e.clientY)}function d(e){W.set(e.clientX,e.clientY),Z.subVectors(W,q);var n=O.domElement===document?O.domElement.body:O.domElement;i(2*Math.PI*Z.x/n.clientWidth*O.rotateSpeed),r(2*Math.PI*Z.y/n.clientHeight*O.rotateSpeed),q.copy(W),O.update()}function v(e){J.set(e.clientX,e.clientY),ee.subVectors(J,Q),ee.y>0?l(a()):ee.y<0&&c(a()),Q.copy(J),O.update()}function f(e){K.set(e.clientX,e.clientY),$.subVectors(K,X),oe($.x,$.y),X.copy(K),O.update()}function p(e){}function x(e){e.deltaY<0?c(a()):e.deltaY>0&&l(a()),O.update()}function h(e){switch(e.keyCode){case O.keys.UP:oe(0,O.keyPanSpeed),O.update();break;case O.keys.BOTTOM:oe(0,-O.keyPanSpeed),O.update();break;case O.keys.LEFT:oe(O.keyPanSpeed,0),O.update();break;case O.keys.RIGHT:oe(-O.keyPanSpeed,0),O.update()}}function g(e){q.set(e.touches[0].pageX,e.touches[0].pageY)}function y(e){var n=e.touches[0].pageX-e.touches[1].pageX,t=e.touches[0].pageY-e.touches[1].pageY,o=Math.sqrt(n*n+t*t);Q.set(0,o)}function w(e){X.set(e.touches[0].pageX,e.touches[0].pageY)}function b(e){W.set(e.touches[0].pageX,e.touches[0].pageY),Z.subVectors(W,q);var n=O.domElement===document?O.domElement.body:O.domElement;i(2*Math.PI*Z.x/n.clientWidth*O.rotateSpeed),r(2*Math.PI*Z.y/n.clientHeight*O.rotateSpeed),q.copy(W),O.update()}function E(e){var n=e.touches[0].pageX-e.touches[1].pageX,t=e.touches[0].pageY-e.touches[1].pageY,o=Math.sqrt(n*n+t*t);J.set(0,o),ee.subVectors(J,Q),ee.y>0?c(a()):ee.y<0&&l(a()),Q.copy(J),O.update()}function P(e){K.set(e.touches[0].pageX,e.touches[0].pageY),$.subVectors(K,X),oe($.x,$.y),X.copy(K),O.update()}function T(e){}function M(e){if(O.enabled!==!1){if(e.preventDefault(),e.button===O.mouseButtons.ORBIT){if(O.enableRotate===!1)return;s(e),_=F.ROTATE}else if(e.button===O.mouseButtons.ZOOM){if(O.enableZoom===!1)return;u(e),_=F.DOLLY}else if(e.button===O.mouseButtons.PAN){if(O.enablePan===!1)return;m(e),_=F.PAN}_!==F.NONE&&(document.addEventListener("mousemove",C,!1),document.addEventListener("mouseup",z,!1),O.dispatchEvent(I))}}function C(e){if(O.enabled!==!1)if(e.preventDefault(),_===F.ROTATE){if(O.enableRotate===!1)return;d(e)}else if(_===F.DOLLY){if(O.enableZoom===!1)return;v(e)}else if(_===F.PAN){if(O.enablePan===!1)return;f(e)}}function z(e){O.enabled!==!1&&(p(e),document.removeEventListener("mousemove",C,!1),document.removeEventListener("mouseup",z,!1),O.dispatchEvent(V),_=F.NONE)}function R(e){O.enabled===!1||O.enableZoom===!1||_!==F.NONE&&_!==F.ROTATE||(e.preventDefault(),e.stopPropagation(),x(e),O.dispatchEvent(I),O.dispatchEvent(V))}function L(e){O.enabled!==!1&&O.enableKeys!==!1&&O.enablePan!==!1&&h(e)}function A(e){if(O.enabled!==!1){switch(e.touches.length){case 1:if(O.enableRotate===!1)return;g(e),_=F.TOUCH_ROTATE;break;case 2:if(O.enableZoom===!1)return;y(e),_=F.TOUCH_DOLLY;break;case 3:if(O.enablePan===!1)return;w(e),_=F.TOUCH_PAN;break;default:_=F.NONE}_!==F.NONE&&O.dispatchEvent(I)}}function S(e){if(O.enabled!==!1)switch(e.preventDefault(),e.stopPropagation(),e.touches.length){case 1:if(O.enableRotate===!1)return;if(_!==F.TOUCH_ROTATE)return;b(e);break;case 2:if(O.enableZoom===!1)return;if(_!==F.TOUCH_DOLLY)return;E(e);break;case 3:if(O.enablePan===!1)return;if(_!==F.TOUCH_PAN)return;P(e);break;default:_=F.NONE}}function D(e){O.enabled!==!1&&(T(e),O.dispatchEvent(V),_=F.NONE)}function k(e){e.preventDefault()}this.object=n,this.domElement=void 0!==t?t:document,this.enabled=!0,this.target=new e.Vector3,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-(1/0),this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.25,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.enablePan=!0,this.keyPanSpeed=7,this.autoRotate=!1,this.autoRotateSpeed=2,this.enableKeys=!0,this.keys={LEFT:37,UP:38,RIGHT:39,BOTTOM:40},this.mouseButtons={ORBIT:e.MOUSE.LEFT,ZOOM:e.MOUSE.MIDDLE,PAN:e.MOUSE.RIGHT},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this.getPolarAngle=function(){return N.phi},this.getAzimuthalAngle=function(){return N.theta},this.reset=function(){O.target.copy(O.target0),O.object.position.copy(O.position0),O.object.zoom=O.zoom0,O.object.updateProjectionMatrix(),O.dispatchEvent(H),O.update(),_=F.NONE},this.update=function(){var t=new e.Vector3,a=(new e.Quaternion).setFromUnitVectors(n.up,new e.Vector3(0,1,0)),r=a.clone().inverse(),l=new e.Vector3,c=new e.Quaternion;return function(){var e=O.object.position;return t.copy(e).sub(O.target),t.applyQuaternion(a),N.setFromVector3(t),O.autoRotate&&_===F.NONE&&i(o()),N.theta+=B.theta,N.phi+=B.phi,N.theta=Math.max(O.minAzimuthAngle,Math.min(O.maxAzimuthAngle,N.theta)),N.phi=Math.max(O.minPolarAngle,Math.min(O.maxPolarAngle,N.phi)),N.makeSafe(),N.radius*=U,N.radius=Math.max(O.minDistance,Math.min(O.maxDistance,N.radius)),O.target.add(Y),t.setFromSpherical(N),t.applyQuaternion(r),e.copy(O.target).add(t),O.object.lookAt(O.target),O.enableDamping===!0?(B.theta*=1-O.dampingFactor,B.phi*=1-O.dampingFactor):B.set(0,0,0),U=1,Y.set(0,0,0),!!(G||l.distanceToSquared(O.object.position)>j||8*(1-c.dot(O.object.quaternion))>j)&&(O.dispatchEvent(H),l.copy(O.object.position),c.copy(O.object.quaternion),G=!1,!0)}}(),this.dispose=function(){O.domElement.removeEventListener("contextmenu",k,!1),O.domElement.removeEventListener("mousedown",M,!1),O.domElement.removeEventListener("wheel",R,!1),O.domElement.removeEventListener("touchstart",A,!1),O.domElement.removeEventListener("touchend",D,!1),O.domElement.removeEventListener("touchmove",S,!1),document.removeEventListener("mousemove",C,!1),document.removeEventListener("mouseup",z,!1),window.removeEventListener("keydown",L,!1)};var O=this,H={type:"change"},I={type:"start"},V={type:"end"},F={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_DOLLY:4,TOUCH_PAN:5},_=F.NONE,j=1e-6,N=new e.Spherical,B=new e.Spherical,U=1,Y=new e.Vector3,G=!1,q=new e.Vector2,W=new e.Vector2,Z=new e.Vector2,X=new e.Vector2,K=new e.Vector2,$=new e.Vector2,Q=new e.Vector2,J=new e.Vector2,ee=new e.Vector2,ne=function(){var n=new e.Vector3;return function(e,t){n.setFromMatrixColumn(t,0),n.multiplyScalar(-e),Y.add(n)}}(),te=function(){var n=new e.Vector3;return function(e,t){n.setFromMatrixColumn(t,1),n.multiplyScalar(e),Y.add(n)}}(),oe=function(){var n=new e.Vector3;return function(t,o){var a=O.domElement===document?O.domElement.body:O.domElement;if(O.object instanceof e.PerspectiveCamera){var i=O.object.position;n.copy(i).sub(O.target);var r=n.length();r*=Math.tan(O.object.fov/2*Math.PI/180),ne(2*t*r/a.clientHeight,O.object.matrix),te(2*o*r/a.clientHeight,O.object.matrix)}else O.object instanceof e.OrthographicCamera?(ne(t*(O.object.right-O.object.left)/O.object.zoom/a.clientWidth,O.object.matrix),te(o*(O.object.top-O.object.bottom)/O.object.zoom/a.clientHeight,O.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),O.enablePan=!1)}}();O.domElement.addEventListener("contextmenu",k,!1),O.domElement.addEventListener("mousedown",M,!1),O.domElement.addEventListener("wheel",R,!1),O.domElement.addEventListener("touchstart",A,!1),O.domElement.addEventListener("touchend",D,!1),O.domElement.addEventListener("touchmove",S,!1),window.addEventListener("keydown",L,!1),this.update()}return n.prototype=Object.create(e.EventDispatcher.prototype),n.prototype.constructor=n,Object.defineProperties(n.prototype,{center:{get:function(){return console.warn("THREE.OrbitControls: .center has been renamed to .target"),this.target}},noZoom:{get:function(){return console.warn("THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead."),!this.enableZoom},set:function(e){console.warn("THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead."),this.enableZoom=!e}},noRotate:{get:function(){return console.warn("THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead."),!this.enableRotate},set:function(e){console.warn("THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead."),this.enableRotate=!e}},noPan:{get:function(){return console.warn("THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead."),!this.enablePan},set:function(e){console.warn("THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead."),this.enablePan=!e}},noKeys:{get:function(){return console.warn("THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead."),!this.enableKeys},set:function(e){console.warn("THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead."),this.enableKeys=!e}},staticMoving:{get:function(){return console.warn("THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead."),!this.enableDamping},set:function(e){console.warn("THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead."),this.enableDamping=!e}},dynamicDampingFactor:{get:function(){return console.warn("THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead."),this.dampingFactor},set:function(e){console.warn("THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead."),this.dampingFactor=e}}}),n}},{}]},{},[5]);
